// Include variables and mixins
@import "../../init-mixins.less";

@card-responsive-layout-gutter-double: @card-responsive-layout-gutter*2;

.card-responsive-layout {
  &.card-count-5 > .card-flip-wrapper {
    flex-basis: calc(~"20%" - @card-responsive-layout-gutter-double);
  }

  &.card-count-4 > .card-flip-wrapper {
    flex-basis: calc(~"25%" - @card-responsive-layout-gutter-double);
  }

  &.card-count-3 > .card-flip-wrapper {
    flex-basis: calc(~"33%" - @card-responsive-layout-gutter-double);
  }

  &.card-count-2 > .card-flip-wrapper {
    flex-basis: calc(~"50%" - @card-responsive-layout-gutter-double);
  }

  > .card-flip-wrapper {
    flex-grow: 0;
    flex-shrink: 0;
    margin-left: 15px;
    margin-right: 15px;   
    flex-basis: calc(~"25%" - @card-responsive-layout-gutter-double);
    .card {
      flex: initial;
      -ms-flex: 1 0 0;
      margin-left: 0;
      margin-right: 0;
    }
  }
}

// 4 or 5 cards per line

.card-count-5.card-responsive-layout[max-width~="1200px"] > .card-flip-wrapper when(@enable-cards-layout-deck-element-queries) {
  flex-basis: calc(~"25%" - @card-responsive-layout-gutter-double);
}

.card-count-5.card-responsive-layout[max-width~="900px"] > .card-flip-wrapper when(@enable-cards-layout-deck-element-queries) {
  flex-basis: calc(~"33.33%" - @card-responsive-layout-gutter-double);
}

.card-count-4.card-responsive-layout[max-width~="900px"] > .card-flip-wrapper when(@enable-cards-layout-deck-element-queries) {
  flex-basis: calc(~"33.33%" - @card-responsive-layout-gutter-double);
}

// Global rules when no cards per line have been set

.card-flip-layout[max-width~="900px"] > .card-flip-wrapper {
  flex-basis: calc(~"33.33%" - @card-responsive-layout-gutter-double);
}

.card-responsive-layout[max-width~="600px"] > .card-flip-wrapper when(@enable-cards-layout-deck-element-queries) {
  flex-basis: calc(~"33.33%" - @card-responsive-layout-gutter-double);
}

.card-responsive-layout[max-width~="300px"] > .card-flip-wrapper when(@enable-cards-layout-deck-element-queries) {
  flex-basis: calc(~"100%" - @card-responsive-layout-gutter-double);
}

.card-responsive-layout[min-width~="@{screen-phone}"][max-width~="720px"]
  > .card-flip-wrapper
  when(@enable-cards-layout-deck-element-queries) {
  flex-basis: calc(~"50%" - @card-responsive-layout-gutter-double);
}

.card-responsive-layout[max-width~="@{screen-phone}"] > .card-flip-wrapper when(@enable-cards-layout-deck-element-queries) {
  flex-basis: calc(~"100%" - @card-responsive-layout-gutter-double) !important;
}

@media screen and (max-width: @screen-sm-min) {
  .card-responsive-layout > .card-flip-wrapper when(@enable-cards-layout-deck-media-queries) {
    flex-basis: calc(~"50%" - @card-responsive-layout-gutter-double) !important;
  }
}

@media screen and (max-width: @screen-phone) {
  .card-responsive-layout > .card-flip-wrapper when(@enable-cards-layout-deck-media-queries) {
    flex-basis: calc(~"100%" - @card-responsive-layout-gutter-double) !important;
  }
}