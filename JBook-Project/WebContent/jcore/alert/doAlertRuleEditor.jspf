<%@ page import='com.jalios.jcms.alert.*' %><%
AlertManager alertMgr = AlertManager.getInstance();
List<AlertChannel> alertChannelList = alertMgr.getAlertChannelList(memberFH.getMember());

Set<AlertRule> alertRuleSet = memberFH.getAvailableAlertRuleSet();
List<AlertRule> alertRuleList = new ArrayList();
if (Util.notEmpty(alertRuleSet)) {
  alertRuleList.addAll(alertRuleSet);
}
boolean noAlertRule = Util.isEmpty(alertRuleList);

AlertRule ruleModel = new AlertRule();
ruleModel.setLevelKey("warning");
ruleModel.setDomain("$domain");
ruleModel.setName("$name");
alertRuleList.add(ruleModel);

String tableCSS = "alert-rule-list table-data  table-app table-condensed" + (noAlertRule ?  " hide" : "");

jcmsContext.addJavaScript("js/jalios/ux/jalios-alert-rule-editor.js");

%>
<%@ include file="/front/doOpenModal.jspf" %>
<jalios:buffer name="alertChannelDescription">
<dl>
  <jalios:foreach collection="<%= alertChannelList %>" name="itAlertChannel" type="AlertChannel">
    <dt><jalios:icon src="<%= itAlertChannel.getIcon() %>" /> <%= itAlertChannel.getLabel(userLang)  %></dt>
    <dd><%= itAlertChannel.getDescription(userLang) %></dd>
  </jalios:foreach>
</dl>
</jalios:buffer>

<div id="alert-rule-editor">
  <jalios:message dismissable="true" title="">
    <% if (memberFH.isDefaultAlertRuleSet()) { %>
    <p class="default-settings"><%= glp("alert.rule-editor.lbl.default-rule-set") %></p>
    <% } %>
    <p><a href="#" onclick="return false;" data-jalios-action="toggle:hide" data-jalios-target="DIV#alert-rule-help" class="ctx-caret <%= noAlertRule ? "hide" : "" %>"><%= glp("alert.rule-editor.lbl.help") %></a></p>
    <div id="alert-rule-help" class="<%= noAlertRule ? "" : "hide" %>">
      <%= glp("alert.rule-editor.lbl.intro", alertChannelDescription) %>
    </div>
  </jalios:message>
  
  
  <table class="<%= tableCSS %>">
    <caption class="sr-only"><%= glp("alert.rule-editor.lbl.table-caption") %></caption>
    <%-- HEADER --%>
    <thead>
      <tr>
        <th scope="col" class="text-overflow"><%= glp("alert.rule-editor.lbl.alert-level") %></th>
        <th scope="col"> <%= glp("alert.rule-editor.lbl.alert-name") %></th>
        <jalios:foreach name="itAlertChannel" collection="<%= alertChannelList %>" type="AlertChannel" >
        <th scope="col" class="text-overflow"><jalios:icon src="<%= itAlertChannel.getIcon() %>" alt="" /> <%= itAlertChannel.getLabel(userLang) %></th>
        </jalios:foreach>
        <th></th>
      </tr>
    </thead>
    
    <%-- CURRENT RULES --%>
    <tbody>
      <jalios:foreach name="itAlertRule" type="AlertRule" collection="<%= alertRuleList %>" counter="c1" >
      <% boolean isRuleModel = "$domain".equals(itAlertRule.getDomain()); %>
      <tr class="<%= isRuleModel ? "alert-rule-model" : "" %>">
        <td class="alert-level-cell fit">
          <% if (isRuleModel) { %>
            <% for(Alert.Level level: Util.getArrayList(Alert.Level.INFO, Alert.Level.ACTION, Alert.Level.WARNING)) { %>
            <span class="badge alert-level alert-level-model alert-level-<%= level.getKey() %>"><%= level.getLabel(userLang) %><input type="hidden" name="alertLevels" value="<%= level.getKey() %>" disabled/></span>
            <% } %>
            <span class="badge alert-level alert-level-model alert-level-any"><%= glp("alert.level.any") %><input type="hidden" name="alertLevels" value="" disabled/></span>
          <% } else if (itAlertRule.getLevel() != null) { %>
          <span class="badge alert-level alert-level-<%= itAlertRule.getLevel().getKey() %>"><%= itAlertRule.getLevel().getLabel(userLang) %></span><input type="hidden" name="alertLevels" value="<%= itAlertRule.getLevel().getKey() %>"/>
          <% } else { %>
          <span class="badge alert-level alert-level-any"><%= glp("alert.level.any") %></span><input type="hidden" name="alertLevels" value=""/>
          <% } %>
        </td>
        <td class="alert-domain-name expand">
          <% if (isRuleModel) { %>
          <img class="jalios-icon" src="s.gif" alt="" />
          <span class="alert-type"></span><input type="hidden" name="alertDomainNames" value="" disabled/>
          <% } else if (itAlertRule.getDomain() != null) { %>
          <img class="jalios-icon" src="<%= channel.getProperty("icon.alert." + itAlertRule.getDomain(), "s.gif") %>" alt="" />
          <span class="alert-type"><%= itAlertRule.getAlertLabel(userLang) %></span><input type="hidden" name="alertDomainNames" value="<%= itAlertRule.getAlertFullName() %>"/>
          <% } else { %>
          <span class="any-alert-type"><%= glp("alert.rule-editor.lbl.alert-name.all") %></span><input type="hidden" name="alertDomainNames" value=""/>
          <% } %>
          <input type="hidden" name="alertChannels" value="<%= com.jalios.jcms.handler.EditMemberHandler.NEWALERTRULE_MARK %>" <%= isRuleModel ? "disabled" : "" %> />
        </td>
        
        <jalios:foreach name="itAlertChannel" collection="<%= alertChannelList %>" type="AlertChannel" counter="c2" >
        <td class="alert-channels alert-channel-<%= itAlertChannel.getName() %> fit">
          <% String alertRuleLabel = Util.getString(itAlertRule.getAlertLabel(userLang), glp("alert.rule-editor.lbl.alert-name.all")); %>
          <input aria-label="<%= encodeForHTMLAttribute(glp("alert.rule-editor.lbl.channel-aria-label", itAlertChannel.getName(), alertRuleLabel)) %>" type="checkbox" name="alertChannels" value="<%= itAlertChannel.getName() %>" <%= itAlertRule.containsAlertChannel(itAlertChannel) ? "checked='checked'" : "" %> <%= isRuleModel ? "disabled" : "" %>/>
        </td>
        </jalios:foreach>
        <td class="fit">
          <% if (channel.isDataWriteEnabled()) { %>
          <a href="#" class="btn btn-rounded alert-rule-delete" onclick="return false;" title='<%= encodeForHTMLAttribute(glp("ui.com.btn.delete")) %>'><jalios:icon src="remove"/></a>
          <% } %>
        </td>
      </tr>
      </jalios:foreach>
    </tbody>
  </table>
  <input type="hidden" name="alertChannels" value="<%= com.jalios.jcms.handler.EditMemberHandler.NEWALERTRULE_MARK %>" />
  
  <% if (channel.isDataWriteEnabled()) { %>
  <div class="br">
  <a href="jcore/alert/editAlertRule.jsp?opMode=opAdd" class="modal btn btn-default"><jalios:icon src="add" /> <%= glp("alert.rule-editor.lbl.add-rule") %></a>
  <% if (isAdmin) { %>
  <a href="#" onclick="return false;" class="alert-rule-show-json btn btn-default" data-jalios-action="toggle:hide" data-jalios-target=".alert-json-view"><%= glp("alert.rule-editor.lbl.show-json") %></a>
  <% } %>
  </div>
  <% } %>
  <% if (isAdmin) { %>
  <div class="alert-json-view hide">
  <pre><%= AlertRule.toJSON(alertRuleSet) %></pre>
  </div>
  <% } %>
  <% if (memberFH.getMember() != null && memberFH.getMember().isPersisted() && memberFH.getMemberAlertSettingsHandler() != null) { %>
    <%-- Only for already created members --%>
    <%
    BasicSettings readAutoInfoSettings = new EnumerateSettings().checkbox().enumValues("true").enumLabelPreprends("<span class=\"badge alert-level alert-level-" + Alert.Level.INFO.getKey() + "\">").enumLabels(Alert.Level.INFO.getLabel(userLang)).enumLabelAppends("</span>");
    readAutoInfoSettings.name(MemberAlertSettingsHandler.PARAM_TOPBAR_AUTO_READ_INFO);
    readAutoInfoSettings.value(memberFH.getMemberAlertSettingsHandler().getAvailableTopbarAutoReadInfo());
    BasicSettings readAutoActionSettings = new EnumerateSettings().checkbox().enumValues("true").enumLabelPreprends("<span class=\"badge alert-level alert-level-" + Alert.Level.ACTION.getKey() + "\">").enumLabels(Alert.Level.ACTION.getLabel(userLang)).enumLabelAppends("</span>");
    readAutoActionSettings.name(MemberAlertSettingsHandler.PARAM_TOPBAR_AUTO_READ_ACTION);
    readAutoActionSettings.value(memberFH.getMemberAlertSettingsHandler().getAvailableTopbarAutoReadAction());
    BasicSettings readAutoWarningSettings = new EnumerateSettings().checkbox().enumValues("true").enumLabelPreprends("<span class=\"badge alert-level alert-level-" + Alert.Level.WARNING.getKey() + "\">").enumLabels(Alert.Level.WARNING.getLabel(userLang)).enumLabelAppends("</span>");
    readAutoWarningSettings.name(MemberAlertSettingsHandler.PARAM_TOPBAR_AUTO_READ_WARNING);
    readAutoWarningSettings.value(memberFH.getMemberAlertSettingsHandler().getAvailableTopbarAutoReadWarning());
    %>
    <div class="member-alert-settings settings-topbar-auto-read">
      <label>
        <%= glp("member-alert-settings.topbar.auto-read") %>
        <jalios:tooltip><%= glp("member-alert-settings.topbar.auto-read.h") %></jalios:tooltip>
      </label>
      <jalios:field resource="field-vertical"  css="topbar-auto-read">
        <jalios:control settings='<%= readAutoInfoSettings %>' />
        <jalios:control settings='<%= readAutoActionSettings %>' />
        <jalios:control settings='<%= readAutoWarningSettings %>' />
      </jalios:field>
    </div>
  <% } %>
</div>