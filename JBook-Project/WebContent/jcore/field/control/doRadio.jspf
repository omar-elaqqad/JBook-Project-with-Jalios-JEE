<%@page import="java.util.HashMap"%>
<%@page import="java.util.Collection"%><%
%><%@page import="java.util.Iterator"%><%
%><%@page import="com.jalios.util.Util"%><%
%><%@page import="com.jalios.jcms.HttpUtil"%><%
%><%@page import="com.jalios.jcms.JcmsUtil"%><%
%><%@page import="com.jalios.jcms.taglib.settings.BasicSettings"%><%
%><%@page import="com.jalios.jcms.taglib.settings.SelectorSettings"%><%
%><%
Object[] radioValues = (Object[]) getOption(SelectorSettings.ENUM_VALUES, null);
String[] radioLabels = (String[]) getOption(SelectorSettings.ENUM_LABELS, null);
if(radioValues != null) {
  String prepend = getIncludeString("PREPEND", getOption(BasicSettings.PREPEND, ""));
  String append = getIncludeString("APPEND", getOption(BasicSettings.APPEND, ""));
  String[] labelPrepends = (String[]) getOption(SelectorSettings.ENUM_LABEL_PREPENDS, null);
  String[] labelAppends = (String[]) getOption(SelectorSettings.ENUM_LABEL_APPENDS, null);
  String disabled = fieldDisabled.booleanValue() ? "disabled=\"disabled\"" : "";
  String readonly = fieldReadOnly.booleanValue() ? "readonly=\"readonly\"" : "";
  String css = getOption(BasicSettings.CSS, "");
  css = Util.notEmpty(css) ? " " + css : "";
  boolean useLabelAsButton = Util.toBoolean(request.getAttribute("useLabelAsButton"), false); 
  String htmlAttributes = getOption(BasicSettings.HTML_ATTRIBUTES, "");
  String dataAttributes = formatDataAttributes(getOption(BasicSettings.DATA_ATTRIBUTES, (Map<String, Object>) null));
  Map<String, Object> ariaAttributesMap = getOption(BasicSettings.ARIA_ATTRIBUTES, (Map<String, Object>) null);
  ControlUtils.autoFillAriaAttributes(ariaAttributesMap, fieldResource, fieldLabelId);
  String ariaAttributes = formatAriaAttributes(ariaAttributesMap);
  String dataEvent = formatAttribute("data-jalios-event='%s'", getOption(BasicSettings.TRIGGER_EVENT, ""));
  String dataAction = formatAttribute("data-jalios-action='%s'", getOption(BasicSettings.TRIGGER_ACTION, ""));
  
  boolean inline  = getOption(SelectorSettings.INLINE, false);

  for (int i = 0; i < radioValues.length; i++) {
    String label   = radioLabels != null && radioLabels.length > i ? radioLabels[i] : null;
    String value   = resolveValue(radioValues[i]);
    String labelPrepend = labelPrepends != null && labelPrepends.length > i ? labelPrepends[i] + " " : "";
    String labelAppend = labelAppends != null && labelAppends.length > i ? labelAppends[i] + " " : "";
    String checked = value.equals(fieldValue) ? "checked='checked'" : "";
    String encFieldName =  HttpUtil.encodeForHTMLAttribute(fieldName);
    String encFieldValue = HttpUtil.encodeForHTMLAttribute(value);
    
    String labelCSS = "";
    if (Util.notEmpty(encFieldValue)) {
      labelCSS = "field-radio-" + encFieldName + "-" + encFieldValue + " ";  
    }
    
    if (inline) {
      labelCSS += "radio-inline" + css;
    }
    
%>
  <% if (!inline) { %><div class="radio<%= css %><%= fieldValues.contains(value) ? " active" : "" %>"><% } %>
  <label class='<%= labelCSS  %>' dir="<%= channel.getLanguageDirection(cptLang) %>" <% if (useLabelAsButton) { %>tabindex="0" role="button"<% } %>>
    <input 
          <% if (Util.toBoolean(request.getAttribute("form-control-id"), true)) { %>id='<%= HttpUtil.encodeForHTMLAttribute(fieldId) %><%= i > 0 ? "_" + i : "" %>' <% } %>
          name="<%= encFieldName %>"
          type="radio"
          value="<%= encFieldValue %>"
          <%= JcmsUtil.getLangAttributes(cptLang) %>
          <%= checked %>
          <%= disabled %>
          <%= readonly %>
          <%= dataEvent %>
          <%= dataAction %>
          <%= dataAttributes %>
          <%= ariaAttributes %>
          <%= htmlAttributes %> />
      <%= prepend %> <%= labelPrepend %><%= encodeForHTML(resolveLabel(radioValues[i], label)) %><%= labelAppend %> <%= append %>
    </label>
  <% if (!inline) { %></div><% } %><%
%><% } // End for %>
  <%= getIncludeString("CONTROL_APPEND", "") %><%
%><% } %><%
request.removeAttribute("useLabelAsButton");
%>