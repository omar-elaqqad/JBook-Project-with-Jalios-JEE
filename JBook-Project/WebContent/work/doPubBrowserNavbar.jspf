<%
//TYPES
boolean displayTypeList = Util.notEmpty(subTypeList) && (subTypeList.size() > 0);

boolean displayCaddyIcon = !formHandler.isDeleteMode() && !isTextFieldPubLink && showCaddy;
boolean showPstatusFilter = formHandler.showPstatusFilter();
boolean showMemberFilter = formHandler.showMemberFilter();
boolean showGroupFilter = formHandler.showGroupFilter();

boolean showDocumentFilter = FileDocument.class.isAssignableFrom(currentClass) ||
DBFileDocument.class.isAssignableFrom(currentClass);

// Portlet & Portal
Map abilityMap = PortalElement.getAllAbilityMap();
boolean showPortletAbilitiesFilter = formHandler.isPortletMode() && Util.notEmpty(abilityMap);
boolean showPortletPortalFilter = formHandler.showPortalFilter();

// All Type, display Add button, unless we are using "All my workspace" in which menu make no sense
// (types can be different and creation would occur in the previous workspace)
// and if the refine category if any, is selectable
boolean showPublishLink = pubBrowserRefineCat != null ? pubBrowserRefineCat.isSelectable() : true;
boolean displayAddBtn = showPublishLink &&
                        !isTextFieldPubLink &&
                        Util.notEmpty(subTypeList) &&
                        workspaceFilter &&
                          (currentClass == Content.class ||
                          currentClass == UserContent.class ||
                          currentClass == Portlet.class ||
                          currentClass == PortalElement.class);

String classShortName = Util.getClassShortName(currentClass);

boolean displayFilterLink = !formHandler.isDeleteMode() && (showPortletAbilitiesFilter || showPortletPortalFilter || showDocumentFilter || showMemberFilter);
boolean displayFilterBar = Util.notEmpty(getMemberParameter("mid")) || Util.notEmpty(getUntrustedStringParameter("documentKinds","")) || showDocumentFilter || showPortletPortalFilter || showPortletAbilitiesFilter;
%>
<form action='<%= ServletUtil.getResourcePath(request) %>' name='typeForm' class='noSingleSubmitButton form-inline'>
  <%
  List<String> disabledHiddenParamList = Arrays.asList(new String[]{
      "classname",
      "pstatus",
      "gid",
      "mid",
      "midChooserDisplay",
      "portalId",
      "text",
      "skip",
      "oldType",
      "ability",
      "documentKinds",
      "start"
  });
  %>
  <%= printDisabledHiddenParams(request, disabledHiddenParamList) %>

  <div class="pub-browser-navbar navbar navbar-default navbar-table-header">
    <div class="container-fluid">
      <div class="navbar-left navbar-form">

        <%-- *** CADDY ******************************************* --%>
        <% if (displayCaddyIcon) { %>
          <div id="pubBrowserCaddy" class='ajax-refresh-div form-group'>
            <%
            boolean caddyFilter = formHandler.isCaddyFilter();
            String caddyQueryString = formHandler.getQueryHandler() != null ? formHandler.getQueryHandler().getQueryString() : null;
            %><%@ include file="/work/doPubBrowserCaddy.jspf" %>
          </div>

          <jalios:javascript>
          jQuery(document).on("jalios:caddy", function(event){
            jQuery.jalios.AjaxRefresh.refresh(
              'work/doPubBrowserCaddy.jsp',
              "#pubBrowserCaddy",
              {
                'noscroll'  : true,
                'nohistory' : true,
                'waiting' : false,
                'params' : {
                   pubBrowserCaddyFilter: <%= caddyFilter %>,
                   pubBrowserCaddyQueryString: '<%= encodeForJavaScript(caddyQueryString) %>'
                }
              }
            );
            jQuery.jalios.ui.CtxMenu.hide();
          });
          </jalios:javascript>
        <% } %>

        <%-- *** FORM REPORT ******************************************* --%>
        <% if (pubCount > 0 && Form.class.isAssignableFrom(currentClass) && currentClass != Form.class) { %>
          <a href="work/displayFormReport.jsp?type=<%= classShortName %>" class="btn btn-default" title='<%= encodeForHTMLAttribute(glp("ui.work.pub.lbl.report")) %>'>
            <jalios:icon src="stats" />
          </a>
        <% } %>

        <%-- *** TYPE LIST ******************************************* --%>
        <% if (displayTypeList) { %>
          <%
          TreeSet<Class> sortedClassSet = JcmsUtil.getSortedClass(subTypeList, workspace, userLang);
          EnumerateSettings typeSettings = new EnumerateSettings().select().onChange("submit");
          %>
          <div class="form-group">
            <jalios:field name="classname" required="true" value="<%= currentClass.getName() %>" resource="field-light">
              <jalios:control settings="<%= typeSettings %>">
                <jalios:buffer name="SELECT_OPTIONS">
                  <% if (formHandler.showAllTypesFilter()) { %>
                    <option value="" <%= Util.isEmpty(fieldValue) ? "selected='selected'" : ""%>><%= glp("ui.work.pub.lbl.all-type") %></option>
                    <option value="" disabled="disabled">-----------------------</option>
                  <% } %>

                  <% for (Class itClass : sortedClassSet) { %>
                    <%
                    String typeValue = itClass.getName();
                    String selected = typeValue.equals(fieldValue) ? "selected='selected'" : "";
                    %>
                    <option value="<%= itClass.getName() %>" <%= selected %>><%= channel.getTypeLabel(itClass, formHandler.getWorkspace(), userLang) %></option>
                  <% } %>
                </jalios:buffer>
              </jalios:control>

              <%-- *** ICONS ******************************************* --%>
              <%
              TypeEntry currentTypeEntry = channel.getTypeEntry(currentClass);
              String editCids = pubBrowserRefineCat != null ? pubBrowserRefineCat.getId() : "";
              %>

              <%-- *** Add/Edit icon ******************************************* --%>
              <%
              if (showPublishLink) {
                if (displayAddBtn) {
                  HashSet typesSet = new HashSet();
                  for (Iterator itClass = subTypeList.iterator(); itClass.hasNext(); ) {
                    Class curClass = (Class) itClass.next();
                    if (loggedMember.canPublish(curClass, workspace) && !channel.getTypeEntry(curClass).isAbstract()) {
                      typesSet.add(curClass);
                    }
                  }
                  %>
                  <span class="input-group-btn">
                    <jalios:edit css="dropdown-toggle btn btn-default add-type" typeSet="<%= typesSet %>" cids="<%= editCids %>" redirect='<%= redirectRefresh %>' popup="<%= popupEdition %>" />
                  </span>
                <% } else if (currentClass != null && currentClass != Form.class && currentTypeEntry != null && !currentTypeEntry.isAbstract()) { %>
                  <% if (Form.class.isAssignableFrom(currentClass)) { %>
                    <% if (!showRadioInsert && !showCheckInsert) {
                      String editUrl = "types/" + classShortName + "/editForm" + classShortName + ".jsp?ws="+workspace.getId();
                      String editLinkTitle = JcmsUtil.glp(userLang, "ui.com.title.add", channel.getTypeLabel(currentClass, workspace, userLang));
                      %>
                      <span class="input-group-btn">
                        <a href='<%= HttpUtil.encodeForHTMLAttribute(editUrl) %>' class="editArea dropdown-toggle btn btn-default" title='<%= encodeForHTMLAttribute(editLinkTitle) %>'>
                          <jalios:icon src="<%= EditTag.ICON_ADD %>" />
                        </a>
                      </span>
                    <% } %>
                  <% } else { %>
                    <span class="input-group-btn">
                      <jalios:edit css="dropdown-toggle btn btn-default" type="<%= currentClass.getName() %>" cids="<%= editCids %>" popup="<%= popupEdition %>" />
                    </span>
                  <% } %>
                <% } %>
              <% } %>
              <%-- EOF Icons --%>
            </jalios:field>
          </div>
          <% if (currentClass != formHandler.getSuperClass()) { %>
          <input type="hidden" name="oldType" value="<%= currentClass.getName() %>" />
          <% } %>
        <% } %><%-- EOF Types --%>
      </div><%-- EOF .navbar-left --%>

      <%-- *** FILTERS: show/hide ******************************************* --%>
      <% if (displayFilterLink) { %>
        <ul class="nav navbar-nav navbar-left">
          <li class="dropdown">
            <a href='#' class="dropdown-toggle <%= displayFilterBar ? "dropup" : "" %>" data-jalios-target=".pubbrowser-navbar-filters|this" data-jalios-action="toggle:hide toggle:dropup" onclick="return false;">
              <jalios:icon src='filter' /> <span class="hidden-xs hidden-sm"><%= glp("ui.com.txt.filters") %></span> <jalios:icon src='caret' />
            </a>
          </li>
        </ul>
      <% } %>

      <div class="navbar-right navbar-form">
        <%-- *** PSTATUS FILTER ******************************************* --%>
        <% if (showPstatusFilter) {
          Set<WFState> stateSet = workspace.getWorkflow(currentClass) == null ? workspace.getWorkflow(Content.class).getStateSet() : workspace.getWorkflow(currentClass).getStateSet();
          EnumerateSettings pstatusEnumerateSettings = new EnumerateSettings().select().onChange("submit");
          %>
          <div class="form-group">
            <jalios:field required="true" label="ui.work.pub.lbl.filter.pstatus" name='pstatus' value='<%= formHandler.getPstatus() %>' resource="field-light">
              <jalios:control settings="<%= pstatusEnumerateSettings %>">
                <jalios:buffer name="SELECT_OPTIONS">
                  <option value="" <%= Util.isEmpty(fieldValue) ? "selected='selected'" : ""%>><%= glp("ui.work.pub.lbl.all-pstatus") %></option>
                  <option value="" disabled="disabled">-----------------------</option>
                  <% for (WFState itWFState : stateSet){ %>
                    <%
                    if (itWFState.getPstatus() == WorkflowConstants.ARCHIVED_PSTATUS ||
                        itWFState.getPstatus() == WorkflowConstants.TRASHED_PSTATUS) {
                      continue;
                    }
                    String pstatusValue = String.valueOf(itWFState.getPstatus());
                    String selected = pstatusValue.equals(fieldValue) ? "selected='selected'" : "";
                    %>
                    <option value="<%= pstatusValue %>" <%= selected %>><%= itWFState.getLabel(userLang) %></option>
                  <% } %>
                </jalios:buffer>
              </jalios:control>
            </jalios:field>
          </div>
        <% } %>

        <%-- *** TEXT FILTER ******************************************* --%>
        <div class="form-group">
          <jalios:field name='text' value="<%= formHandler.getText() %>" resource="field-light">
            <jalios:control settings='<%= new TextFieldSettings().placeholder("ui.com.placeholder.search") %>' />
            <span class="input-group-btn">
              <button class="btn btn-default" name="opSearch" type="submit"><jalios:icon src="search"/></button>
            </span>
          </jalios:field>
        </div>
      </div><%-- EOF (navbar) .navbar-right --%>
    </div><%-- EOF (navbar) .container-fluid --%>

    <%-- *** MEMBER FILTER ******************************************* --%>
    <% if (displayFilterLink) { %>
      <div class="container-fluid pubbrowser-navbar-filters<%= displayFilterBar ? "" : " hide" %>">
        <div class="navbar-left navbar-form">
          <%
          MemberSettings mbrSettings = new MemberSettings();
          mbrSettings.filter(MemberSettings.MemberFilter.NO_DEFAULT_FILTER, MemberSettings.MemberFilter.ACCOUNT);
          mbrSettings.onChange("submit");
          if (showMemberFilter) {
            mbrSettings.group(formHandler.getGroups());
            %>
            <label><%= glp("ui.com.lbl.author") %></label>
            <div class="form-group">
              <jalios:field label="ui.work.pub.lbl.filter.member" name='mid' resource="field-light" value='<%= formHandler.getMember() %>'>
                <jalios:control settings='<%= mbrSettings %>' />
              </jalios:field>
            </div>
          <% } %>
          <%-- *** GROUP FILTER ******************************************* --%>
          <%
          GroupSettings grpSettings = new GroupSettings();
          grpSettings.onChange("submit");
          if (showGroupFilter) {
            %>
            <label><%= glp("ui.com.lbl.group") %></label>
            <div class="form-group">
              <jalios:field label="ui.work.pub.lbl.filter.group" name='gid' resource="field-light" value='<%= formHandler.getSelectedGroup() %>'>
                <jalios:control settings='<%= grpSettings %>' />
              </jalios:field>
            </div>
          <% } %>
          <%@ include file='/work/pubbrowser/doPubBrowserPortletFilters.jspf' %>
          <%@ include file='/work/pubbrowser/doPubBrowserFileDocumentFilters.jspf' %>
        </div><%-- .navbar-left --%>
      </div><%-- .container-fluid .pubbrowser-navbar-filters --%>
    <% } %>
  </div><%-- .pub-browser-navbar --%>
</form>