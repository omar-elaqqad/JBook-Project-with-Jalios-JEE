<%@ page contentType="text/html; charset=UTF-8" %><%
%><%@page import="com.jalios.jcms.taglib.list.DataListItemTag"%><%
%><%@page import="com.jalios.jcms.taglib.list.ListItemTag.LinkTarget"%><%
%><%@ include file="/jcore/doInitPage.jspf" %><%
Data data = (Data) getIncludeObject("data", null);
if (data == null || !data.canBeReadBy(loggedMember)) {
  return;
}
boolean canWorkOn = isLogged && data instanceof Publication && loggedMember.canWorkOn((Publication)data);
String css = getIncludeString("css", "").trim();
css += canWorkOn ? " has-action" : "";
css = Util.notEmpty(css) ? (css + " itemlist-item-"+ data.getClass().getSimpleName()) : ""; 

String link = getIncludeString("link", null);
Map<String, String[]> linkParams = (Map<String, String[]>) getIncludeObject("linkParams", null);
if (Util.notEmpty(linkParams)) {
  link = URLUtils.buildUrl(link, linkParams);
}

String text = getIncludeString("text", null);
String icon = getIncludeString("icon", null);
String iconAlt = getIncludeString("iconAlt", null);
String linkCss = "";
linkCss += Util.notEmpty(getIncludeString("linkCss", null)) ? " " + getIncludeString("linkCss", null) : linkCss;

Date itemDate = (Date) getIncludeObject("dataDate", null);
DataAttribute dataAttribute = (DataAttribute) getIncludeObject("dataAttribute", null);
DataAttribute linkDataAttribute = (DataAttribute) getIncludeObject("linkDataAttribute", null);
String htmlAttributes = data.getDisplayLinkHtmlAttributes();
LinkTarget linkTarget = (LinkTarget) getIncludeObject("linkTarget", null);
if (linkTarget == null) {
  boolean isOpenNewPage = htmlAttributes.contains("target=\"_blank\"");
  if (isOpenNewPage) {
    linkTarget =  LinkTarget.BLANK;
  }
}

boolean showActions = Util.toBoolean(request.getAttribute("showActions"), true);
%>