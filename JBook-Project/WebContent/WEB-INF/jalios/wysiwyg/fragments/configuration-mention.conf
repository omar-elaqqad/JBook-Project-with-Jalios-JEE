mentions: {
  queryBy: 'fullName',
  insert: "@raw"/* function(mbr) {
    // mention plugin uses the data attributes added, so 'fullName' can be lowercase
    if(mbr.fullname) {
      mbr.fullName = mbr.fullname;
    }

    // Cache the MemberInfos
    this.editor.jcms.setMemberInfos(mbr);

    return this.editor.jalios.plugins.mention.createHtmlTag(mbr) + '&nbsp;';
  } */,
  renderDropdown: "@raw"/* function() {
    return '<ul class="rte-autocomplete dropdown-menu"><li class="loading"> <div class="message-help">' + tinymce.i18n.translate('mentionextra.enter-text-to-search') + '</div></li></ul>';
  } */,
  render: "@raw"/* function(item, index) {
    var message = item.message;
    if(message) {
      if(message === 'mentionextra.no-result') {
        // No result
        return '<li> <a href="javascript:;"> <span>' + tinymce.i18n.translate(message) + '</span></a> </li>';
      } else if(message === 'mentionextra.enter-text-to-search') {
        // Query too short or empty
        return '<li class="loading"> <div class="message-help">' + tinymce.i18n.translate(message) + '</div></li>';
      }
    }
    let photo = item.photo || 'images/jalios/layout/silhouette.jpg';
    let useInitials = !item.photo && item.initials;
    return '<li' + (index == 0 ? ' class="active"' : '') + '>'
            + '<a href="javascript:;">'
              + (useInitials
                  ? ('<span class="initials-photo initials photo icon-photo" style="background-color: '+item.initialsColor+';">'+item.initials+'</span>') 
                  : ('<img src="' + photo + '" class="photo" />') 
              )
              +' <span>' + item[this.options.queryBy] + '</span>'
            +'</a>' 
          + '</li>';
  } */,
  matcher: "@raw"/* function(item) {
    // Always return true because the source is already filtered from server
    return true;
  } */,
  sorter: "@raw"/* function(items) {
    // Always return original items because they are already sorted on server
    return items;
  } */,
  source: "@raw"/* function (query, process, delimiter) {
    if (delimiter === '@' && query.length > 1) {
      $.getJSON('jcore/autocomplete/acmention.jsp', {autocomplete: query})
        .done(function (data) {
          if(!data || data.length == 0) {
            // Add an item to display the dropdown a specific message
            data = [{ message: 'mentionextra.no-result' }];
          }
          process(data);
        })
        .fail(function( jqxhr, textStatus, error ) {
          var err = textStatus + ', ' + error;
          jQuery.console.log('Request Failed: ' + err);
        });
    } else {
      process([{ message: 'mentionextra.enter-text-to-search' }]);
    }
  } */
}